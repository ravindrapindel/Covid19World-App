{"version":3,"sources":["components/Countries/Country.module.css","components/Allcovid/AllCovid.module.css","components/Graphs/GraphHeader.module.css","components/Context/Context.js","components/Allcovid/AllCovid.js","Hooks/useSort.js","components/Graphs/LineChart.js","components/Graphs/BarChart.js","components/Graphs/GraphHeader.js","components/Footer/Footer.js","components/Loading/Loading.js","components/Graphs/CountryGraph.js","components/Countries/Country.js","components/Countries/Countries.js","components/Header/Header.js","components/Header/Input.js","GoogleMap/MapData.js","GoogleMap/Mapes.js","App.js","reportWebVitals.js","index.js","components/Footer/Footer.module.css","components/Header/Header.module.css","components/Graphs/LineChart.module.css","components/Graphs/BarChart.module.css","components/Header/Input.module.css","GoogleMap/Mapes.module.css","components/Graphs/CountryGraph.module.css","components/Loading/Loading.module.css"],"names":["module","exports","DataContext","React","createContext","data","isCountrySelected","isCountrySelectedHandler","country","countryHandler","sortSelected","sortSelectedHandler","ContextProvider","props","useState","setCountry","setIsCountrySelected","setSortSelected","Provider","value","e","children","AllCovid","Cntx","useContext","countryName","datas","undefined","countryData","filter","className","classes","Heading","Confirmed","cases","new","total","Active","active","Recovered","recovered","Deceased","deaths","onClick","mapHandler","useSort","prop","cntx","temp","map","res","newCase","casepermillion","deathspermillion","critical","parseInt","continent","sort","a","b","GetSortDecrease","LineChart","labels","date","datasets","label","Case","fill","backgroundColor","borderColor","Chart","options","scales","yAxes","ticks","beginAtZero","BarChart","activeCase","borderWidth","GraphHeader","totalCase","recoveredCase","deathsCase","newDeathcase","Footer","footer","href","Loading","CountryGraph","countrydata","setCountryData","loading","setLoading","useEffect","fetch","then","response","json","catch","err","console","error","newdeathsCase","recoveryRate","recoveryrate","activecase","newcase","recoveredcase","deathcase","newdeaths","totalcase","unshift","day","Btn","graphBtnHandler","window","scrollTo","Country","showCountryData","setShowCountryData","setCountryName","ClickHandler","target","innerText","showGraphHandler","btnHandler","index","confirmed","Countries","setSort","previousClick","setPreviousClick","sortedArray","arr","localStorage","getItem","state","Header","Date","Input","inputRef","useRef","RandomData","isshow","setIsshow","setValue","setArr","setItem","type","placeholder","ref","onKeyUp","current","input","toUpperCase","length","array","indexOf","onChange","clear","event","Mapes","selectCase","setSelectCase","mapdata","get","width","lat","lng","myDIV","style","height","borderRadius","border","brightness","opacity","hide","unit1","name","color","bootstrapURLKeys","key","defaultCenter","defaultZoom","mapHandle","map1","Map","i","set","GoogleMap","App","setData","googlemap","setGooglemap","worldcovid","setWorldcovid","log","MapData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d9c74de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Country_Btn__2phc4\",\"Btn-country\":\"Country_Btn-country__Q_w8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllCovid\":\"AllCovid_AllCovid__2EW3W\",\"Confirmed\":\"AllCovid_Confirmed__2_9k-\",\"Active\":\"AllCovid_Active__37zM_\",\"Recovered\":\"AllCovid_Recovered__3dt7e\",\"Deceased\":\"AllCovid_Deceased__2db2L\",\"Heading\":\"AllCovid_Heading__1a8I4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllCovid\":\"GraphHeader_AllCovid__24jb6\",\"Confirmed\":\"GraphHeader_Confirmed__3Yb2G\",\"Active\":\"GraphHeader_Active__1K4DJ\",\"Recovered\":\"GraphHeader_Recovered__1DAlv\",\"Deceased\":\"GraphHeader_Deceased__2PhXN\",\"Heading\":\"GraphHeader_Heading__3Vw1b\"};","import React from \"react\";\r\nimport { useState} from \"react\";\r\n// created react context\r\nconst  DataContext = React.createContext({\r\n    // data has covid datas all the countries that we got through props from App \r\n        data:[],\r\n    // To check if country is selected in the input component previously\r\n        isCountrySelected: false,\r\n    // To set the value of isCountrySelected \r\n        isCountrySelectedHandler: ()=>{},\r\n        // Hold the name of selected country\r\n        country:\"\",\r\n        // set the value of selected country\r\n        countryHandler : ()=>{},\r\n        // Hold the value case on which we want to sort the covid datas\r\n        sortSelected : \"\",\r\n        // set the value of sortSelected\r\n        sortSelectedHandler: ()=>{}\r\n    });\r\n\r\n\r\nexport function ContextProvider(props){\r\n    //States for name of selected country, if country is selcted, sorting the data bases on the different value of input\r\n    const [country, setCountry] = useState(\"\");\r\n    const [isCountrySelected, setIsCountrySelected] = useState(false);\r\n    const [sortSelected, setSortSelected] = useState(\"newCase\");\r\n    \r\n   // set the value of selected country\r\n    \r\n   function countryHandler(e){\r\n       setCountry(e);\r\n   }\r\n\r\n   // To set the state if country is selected or not\r\n   function isCountrySelectedHandler(e){\r\n       setIsCountrySelected(e);\r\n   }\r\n// set the value of sortSelected\r\n   function sortSelectedHandler(e){\r\n      setSortSelected(e)\r\n   }\r\n    return(\r\n        <DataContext.Provider value={{\"data\" : props.data,\r\n        \"isCountrySelected\" : isCountrySelected,\r\n        \"isCountrySelectedHandler\" : isCountrySelectedHandler,\r\n          \"country\":country,\r\n          \"countryHandler\" : countryHandler,\r\n          \"sortSelected\" : sortSelected,\r\n          \"sortSelectedHandler\": sortSelectedHandler\r\n\r\n        }}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n\r\n    )\r\n    \r\n}\r\nexport default DataContext;","import { useContext } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./AllCovid.module.css\"\r\nfunction AllCovid(props){\r\n    // Using context api to get datas\r\n    const Cntx = useContext(DataContext);\r\n    let countryName = false;\r\n   \r\n//   filter covid data of world \r\n\r\n\r\n  let datas=[]; \r\n if(props.countryData!==undefined){\r\n     countryName=true;\r\n    datas= [props.countryData];\r\n }\r\n else{\r\n    datas = Cntx.data.filter((e)=> e.country=== \"All\");   \r\n }\r\n    \r\n    return(\r\n           <>\r\n        <h1 className={classes.Heading}> {countryName? datas[0].country : \"World\" }</h1>\r\n        <div className={classes.AllCovid}>\r\n            <div className={classes.Confirmed}>\r\n            <div>\r\n                Confirmed\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.new}\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.total}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Active}>\r\n            <div >\r\n                Active\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.active}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Recovered}>\r\n            <div>\r\n                Recovered\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.recovered}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Deceased}>\r\n            <div>\r\n                Deceased\r\n            </div>\r\n            <div>\r\n            {datas[0].deaths.new}\r\n            </div>\r\n            <div>\r\n            {datas[0].deaths.total}\r\n            </div>\r\n            </div>\r\n            <div>\r\n            {/* butoon to COVID19 World Map*/}\r\n                <button onClick={props.mapHandler}> COVID19 World Map</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default AllCovid;","import {useContext} from \"react\";\r\nimport DataContext from \"../components/Context/Context\";\r\n\r\n\r\nfunction useSort(props){\r\n // To get data from context api\r\n const cntx = useContext(DataContext);\r\n\r\n // Sorting function which will sort the array in decreasing order based on prop on which we want to sort\r\n function GetSortDecrease (prop) {    \r\n    return function(a, b) {    \r\n        if (a[prop] < b[prop]) {    \r\n            return 1;    \r\n        } else if (a[prop] > b[prop]) {    \r\n            return -1;    \r\n        }    \r\n        return 0;    \r\n    }    \r\n }    \r\n function GetSortIncrease (prop) {    \r\n    return function(a, b) {    \r\n        if (a[prop] > b[prop]) {    \r\n            return 1;    \r\n        } else if (a[prop] < b[prop]) {    \r\n            return -1;    \r\n        }    \r\n        return 0;    \r\n    }    \r\n } \r\n\r\n \r\n // Creating temp array which taken all the need datas from the context API and return an array of objects containing important properties like country name, cases, etc\r\n const temp = cntx.data.map((res)=>{\r\n     var newCase=0;\r\n     var casepermillion=0;\r\n     var deathspermillion=0;\r\n     var active=0;\r\n     var recovered=0;\r\n     var deaths=0;\r\n     var critical=0\r\n     // To check if data is present\r\n     if(res.cases.new !==null){\r\n         newCase = parseInt(res.cases.new )\r\n     }\r\n \r\n     if(res.cases[\"1M_pop\"]!==null){\r\n          casepermillion=parseInt(res.cases[\"1M_pop\"]);\r\n     }\r\n     if(res.deaths[\"1M_pop\"]!==null){\r\n         deathspermillion=parseInt(res.deaths[\"1M_pop\"])\r\n     }\r\n     if(res.cases.active!==null){\r\n         active = parseInt(res.cases.active)\r\n     }\r\n     if(res.cases.recovered!==null){\r\n        recovered = parseInt(res.cases.recovered)\r\n     }\r\n     if(res.deaths.total!==null){\r\n         deaths = parseInt(res.deaths.total)\r\n     }\r\n     if(res.cases.critical!==null){\r\n         critical=parseInt(res.cases.critical);\r\n     }\r\n return(\r\n     { \r\n         \"newCase\": newCase,\r\n         \"casepermillion\" : casepermillion,\r\n         \"deathspermillion\" : deathspermillion,\r\n         \"country\" : res.country,\r\n         \"continent\": res.continent,\r\n         \"confirmed\" : parseInt(res.cases.total),\r\n         \"active\" :active,\r\n         \"recovered\":recovered,\r\n         \"deaths\" : deaths,\r\n         \"critical\" : critical\r\n     }\r\n )\r\n \r\n });\r\n\r\n if(props){\r\n    temp.sort(GetSortIncrease(cntx.sortSelected));\r\n }\r\nelse{\r\n    temp.sort(GetSortDecrease(cntx.sortSelected));\r\n}\r\n\r\n\r\n return(\r\n     temp\r\n )\r\n\r\n\r\n}\r\n\r\nexport default useSort;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport classes from \"./LineChart.module.css\";\r\n\r\nfunction LineChart(props){\r\n  \r\nconst data = {\r\n  labels: props.date,\r\n  datasets: [\r\n    {\r\n      label: props.label,\r\n      data: props.Case,\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(0, 0, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nreturn(<>\r\n   <div className={classes.Heading} >\r\n     {props.label + \" in \" + props.country}  \r\n    </div>\r\n    <div className={classes.Chart} > <Line data={data} options={options} /> </div>\r\n   \r\n    \r\n  </>)\r\n}\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport classes from \"./BarChart.module.css\";\r\n\r\n\r\n\r\nfunction BarChart(props){\r\n\r\nlet activeCase =  props.Case;\r\nlet date = props.date;\r\n\r\nconst data = {\r\n        labels: date,\r\n        datasets: [\r\n          {\r\n            label: props.label,\r\n            data: activeCase,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n    return(\r\n  <>\r\n    <div className={classes.Heading} >\r\n    {props.label + \" in \" + props.country}  \r\n    </div>\r\n    <div className={classes.Chart} >\r\n    <Bar data={data} options={options} />\r\n    </div>\r\n  </>\r\n);\r\n}\r\n\r\nexport default BarChart;","import classes from \"./GraphHeader.module.css\"\r\nfunction GraphHeader(props){\r\nconst totalCase = props.countryData.cases.total;\r\nconst newCase = props.countryData.cases.new;\r\nconst activeCase =props.countryData.cases.active;\r\nconst recoveredCase = props.countryData.cases.recovered;\r\nconst deathsCase = props.countryData.deaths.total;\r\nconst newDeathcase = props.countryData.deaths.new;\r\n// console.log(props.countryData);\r\n\r\n    \r\n    return(\r\n           <>\r\n        <h1 className={classes.Heading}> {props.countryData.country}</h1>\r\n        <div className={classes.AllCovid}>\r\n            <div className={classes.Confirmed}>\r\n            <div>\r\n                Confirmed\r\n            </div>\r\n            <div>\r\n            {newCase}\r\n            </div>\r\n            <div>\r\n            {totalCase}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Active}>\r\n            <div >\r\n                Active\r\n            </div>\r\n            <div>\r\n            {activeCase}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Recovered}>\r\n            <div>\r\n                Recovered\r\n            </div>\r\n            <div>\r\n            {recoveredCase}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Deceased}>\r\n            <div>\r\n                Deceased\r\n            </div>\r\n            <div>\r\n            {newDeathcase}\r\n            </div>\r\n            <div>\r\n            {deathsCase}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n       \r\n    );\r\n}\r\n\r\nexport default GraphHeader;","import classes from \"./Footer.module.css\";\r\nfunction Footer(){\r\n\r\n\r\n    return(<> \r\n    <footer className={classes.footer}>\r\n    <a className={classes[\"footer-logo\"]}href=\"https://github.com/ravindrapindel/Covid19World-App\"> <i className=\"fab fa-github fa-2x\"></i>  </a>\r\n     <a className={classes[\"footer-logo\"]} href=\"https://www.linkedin.com/in/ravindra-pindel-a65626144/\">   <i className=\"footer-logo fab fa-linkedin fa-2x\"></i>  </a>\r\n     <a className={classes[\"footer-logo\"]} href=\"https://www.instagram.com/pindelravindra/\"> <i className=\"footer-logo fab fa-instagram fa-2x\"></i> </a>\r\n\r\n\r\n    <div className={classes[\"footer-copy\"]} >© Copyright 2021 COVID19 World Tracker </div>\r\n\r\n  </footer>\r\n\r\n  </>)\r\n}\r\n\r\nexport default Footer;","import classes from \"./Loading.module.css\";\r\nfunction Loading(){\r\n  \r\n\r\n    return(\r\n        <div className={classes.Loading}> \r\n         Loading ....  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Loading;","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport BarChart from \"./BarChart\";\r\nimport GraphHeader from \"./GraphHeader\";\r\nimport classes from \"./CountryGraph.module.css\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nfunction CountryGraph(props){\r\n    const [countrydata, setCountryData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://covid-193.p.rapidapi.com/history?country=${props.countryName}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"613baafc16msh487fdb600a437f5p1ae449jsnf8acf1720170\"\r\n            }\r\n        })\r\n        .then(response => {\r\n            return response.json();\r\n        }).then((json)=> {\r\n        setCountryData(()=>json)\r\n        setLoading(()=>true);\r\n       ;})\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n\r\n    },[props.countryName]);\r\n    let  newCase=[];\r\n    let recoveredCase = [];\r\n    let deathsCase = [];\r\n    let date = [];\r\n    let activeCase=[];\r\n    let totalCase = [];\r\n    let newdeathsCase = [];\r\n    let recoveryRate= [];\r\n    if(loading){\r\n    \r\n    countrydata.response.map((country)=> {\r\n        let activecase=0; let newcase=0; let recoveredcase=0; let deathcase=0 ; let newdeaths=0; let totalcase=0;\r\n        let recoveryrate=0;\r\n          if(country.cases.active!==\"\"){\r\n             activecase=parseInt(country.cases.active);\r\n          }\r\n          if(country.cases.new!==\"\"){\r\n            newcase=parseInt(country.cases.new);\r\n         }\r\n         if(country.cases.recovered!==\"\"){\r\n            recoveredcase=parseInt(country.cases.recovered);\r\n         }\r\n         if(country.deaths.total!==\"\"){\r\n            deathcase=parseInt(country.deaths.total);\r\n         }\r\n         if(country.deaths.new!==\"\"){\r\n            newdeaths=parseInt(country.deaths.new);\r\n         }\r\n        if(country.cases.total!==\"\"){\r\n            totalcase=parseInt(country.cases.total);\r\n        }\r\n           recoveryrate = recoveredcase*100/totalcase;\r\n            totalCase.unshift(totalcase);\r\n            activeCase.unshift(activecase);\r\n            newCase.unshift(newcase);\r\n            recoveredCase.unshift(recoveredcase);\r\n            deathsCase.unshift(deathcase);\r\n            newdeathsCase.unshift(newdeaths);\r\n            date.unshift(country.day);\r\n            recoveryRate.unshift(recoveryrate);\r\n        \r\n\r\n        return country.cases.total}\r\n        );\r\n    }\r\n    \r\n   function btnHandler(){\r\n    props.graphBtnHandler();\r\n     window.scrollTo(0, 0)\r\n     \r\n   } \r\n   \r\n    return(<>\r\n    \r\n    {loading && <>\r\n        \r\n     <GraphHeader countryData= {countrydata.response[0]}/>\r\n     <LineChart Case={totalCase} date={date} label=\"Total Cases\" country={countrydata.response[0].country}/>\r\n     <BarChart Case={newCase} date ={date} label=\"Daily New Cases\" country={countrydata.response[0].country}/>\r\n     <LineChart Case={activeCase} date={date} label=\"Active Cases\" country={countrydata.response[0].country}/> \r\n     <LineChart Case={deathsCase} date={date} label=\"Total Deaths\" country={countrydata.response[0].country}/>\r\n     <BarChart Case={newdeathsCase} date={date} label=\"Daily Deaths\" country={countrydata.response[0].country}/>\r\n     <LineChart Case={recoveryRate} date={date} label=\"Recovery rate\" country={countrydata.response[0].country}/>\r\n     <div className={classes.Btn}> <button  onClick = {btnHandler}> Back</button> </div>\r\n     <Footer />\r\n     </>\r\n    }\r\n    { !loading && <Loading />}\r\n    \r\n    </>\r\n    \r\n\r\n    )\r\n}\r\n\r\nexport default CountryGraph;","import { useState } from \"react\";\r\nimport classes from \"./Country.module.css\";\r\nimport CountryGraph from \"../Graphs/CountryGraph\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\n\r\nfunction Country(props){\r\n\r\n  const [showCountryData, setShowCountryData] = useState(true);\r\n  const [countryName, setCountryName] = useState(\"\");\r\n\r\n\r\n\r\n  function ClickHandler(e){\r\n   setCountryName(()=>e.target.innerText);\r\n    setShowCountryData(false);\r\n    props.showGraphHandler();\r\n  }\r\n\r\n  function graphBtnHandler(){\r\n    setShowCountryData(true);\r\n    props.showGraphHandler();\r\n  }\r\n  \r\n  \r\n  \r\n    return( <>\r\n  { showCountryData && \r\n            <div className=\"table-responsive-md\">\r\n             <table className=\"table table-striped\">\r\n             {/* Table Header with buttons for sorting datas */}\r\n               <thead>\r\n                 <tr >\r\n                    <th>Country</th>\r\n                    <th> <button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i>Confirmed </button></th>\r\n                    <th> <button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i>Active </button></th>\r\n                    <th><button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i> Recovered </button></th>\r\n                    <th> <button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i> Critical </button> </th>\r\n                    <th> <button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i> Deceased</button></th>\r\n                   <th> <button onClick={props.btnHandler} className={classes.Btn}> <i className=\"fas fa-sort\"></i>Cases per million </button></th>\r\n                   <th> <button onClick={props.btnHandler} className={classes.Btn}><i className=\"fas fa-sort\"></i> Deaths per million </button></th>\r\n                    </tr>\r\n                    </thead>\r\n                  <tbody>\r\n{/* Rendering all the countries datas */}\r\n                  {props.data.map((response,index)=>{\r\n\r\n        return (\r\n\r\n    <tr key={index} >\r\n    <td > <button className={classes[\"Btn-country\"]} onClick={ClickHandler}> {response.country}</button></td>\r\n    <td> <h6>+{response.newCase} </h6> {response.confirmed}</td>\r\n    <td>{response.active}</td>\r\n    <td> {response.recovered}</td>\r\n    <td> {response.critical}</td>\r\n    <td>  {response.deaths}</td>\r\n    <td> {response.casepermillion}</td>\r\n    <td>{response.deathspermillion} </td>\r\n  </tr>\r\n    )\r\n    })}\r\n    </tbody>\r\n</table>\r\n<Footer />\r\n </div>\r\n  }\r\n {!showCountryData && <> \r\n <CountryGraph countryName={countryName} graphBtnHandler={graphBtnHandler}/>\r\n  </>}\r\n </>\r\n\r\n)\r\n}\r\n\r\nexport default Country;","import { useContext, useState } from \"react\";\r\nimport useSort from \"../../Hooks/useSort\";\r\nimport DataContext from \"../Context/Context\";\r\nimport Country from \"./Country\";\r\n\r\n\r\n\r\nfunction Countries(props){\r\n\r\n    const cntx = useContext(DataContext);\r\n    // sort state to toggle the increase state and decrease state\r\n    const [sort, setSort] = useState(false);\r\n    const [previousClick, setPreviousClick] = useState(\"newCase\");\r\n    \r\n // useSort is a custom hook which return a sorted array in the increasing or decreasing order based on the given input  \r\n    const sortedArray = useSort(sort);\r\n    let arr=[];\r\n   \r\n    // check if county is selected previosly and present in the local host \r\n    if(localStorage.getItem(\"country\") !== \"undefined\" && localStorage.getItem(\"country\")!==null){\r\n        // getting data of previously selected country \r\n    arr=sortedArray.filter((e)=> e.country === localStorage.getItem(\"country\"));\r\n    }   \r\n    else if(cntx.isCountrySelected){\r\n     //  data of selected country\r\n    arr = sortedArray.filter((e)=>  e.country === cntx.country )\r\n    }\r\n    else{\r\n    arr = sortedArray.filter((e)=>  e.country !== e.continent )\r\n    }\r\n    // sorting the covid data based on the use input \r\n    \r\n\r\n\r\n    // To provide use input data of context API, passed as props to country component\r\n    \r\n    function btnHandler(e){ \r\n    \r\n\r\n    if(e.target.innerText===\"Cases per million\"){\r\n        if(previousClick===\"Cases per million\"){\r\n            setSort((state)=>!state); \r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"casepermillion\");\r\n        setPreviousClick(\"Cases per million\");\r\n    }\r\n    else if(e.target.innerText===\"Deaths per million\"){\r\n        if(previousClick===\"Deaths per million\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"deathspermillion\")\r\n        setPreviousClick(\"Deaths per million\");\r\n    }\r\n    else if(e.target.innerText===\"Active\"){\r\n        if(previousClick===\"Active\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"active\")\r\n        setPreviousClick(\"Active\");\r\n    }\r\n    else if(e.target.innerText===\"Recovered\"){\r\n        if(previousClick===\"Recovered\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"recovered\")\r\n        setPreviousClick(\"Recovered\");\r\n    }\r\n    else if(e.target.innerText===\"Critical\"){\r\n        if(previousClick===\"Critical\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"critical\")\r\n        setPreviousClick(\"Critical\");\r\n    }\r\n    else if(e.target.innerText===\"Deceased\"){\r\n        if(previousClick===\"Deceased\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n        }\r\n        cntx.sortSelectedHandler(\"deaths\")\r\n        setPreviousClick(\"Deceased\");\r\n    }\r\n    else {\r\n        if(previousClick===\"newCase\"){\r\n            setSort((state)=>!state);\r\n        }\r\n        else{\r\n        setSort(false);\r\n       }\r\n        setPreviousClick(\"newCase\");\r\n        cntx.sortSelectedHandler(\"newCase\")\r\n    }\r\n    }\r\n   \r\n    return (\r\n       \r\n       \r\n        <Country btnHandler={btnHandler} data={arr} showGraphHandler={props.showGraphHandler} />\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default Countries;\r\n\r\n\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nfunction Header(){\r\n    // Context API to get date of the datas\r\n    const Cntx = useContext(DataContext);\r\n   \r\n    return(\r\n        <>\r\n       \r\n        <h1 className={classes.Header}> COVID19 <span>WORLD</span></h1>\r\n        <h3 className={classes.Header}> Search your country or continent </h3>\r\n        <div className={classes.Date}>{Cntx.data[0].day}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useContext, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./Input.module.css\";\r\n\r\n\r\nfunction Input(){\r\n\r\n  // Refernce to input element\r\n   const inputRef = useRef();\r\n   const Cntx = useContext(DataContext)\r\n// To get name of the countries to show to user to select in the input \r\n   const RandomData= Cntx.data.map((e)=> e.country);\r\n   // state to manage the suggestion to user\r\n   const [isshow, setIsshow]= useState(false);\r\n   // To manage name of the selected country\r\n   const [value, setValue] = useState(\"\");\r\n   // arr state which manage the countries which matching to user input\r\n   const [arr, setArr] = useState([]);\r\n\r\n\r\n   // To filter the name of countries to suggest when user press key in the input\r\n   function filterFunction(){\r\n    setValue(inputRef.current.value);\r\n    Cntx.isCountrySelectedHandler(()=>false);\r\n    localStorage.setItem(\"country\", undefined);\r\n     var input = inputRef.current.value.toUpperCase();\r\n     if(input.length >=2){   \r\n       // Filter the matching country after 2 or more input \r\n    var array = RandomData.filter((e)=> e.toUpperCase().indexOf(input)>-1);\r\n    array.length=7;\r\n     setArr(array);\r\n     setIsshow(true)\r\n   }\r\n   else{\r\n       \r\n       setArr([]);\r\n   }\r\n   }\r\n\r\n   // To take the input when user select the country\r\n   function btnHandler(e){\r\n       setValue(e.target.innerText);\r\n      localStorage.setItem(\"country\", e.target.innerText);\r\n      Cntx.countryHandler(e.target.innerText);\r\n      Cntx.isCountrySelectedHandler(true);\r\n      // Isshow false to not show any suggestion after user selcted \r\n      setIsshow(false);\r\n   }\r\n\r\n   function changeHandler(e){\r\n    localStorage.clear()\r\n    setValue(e.target.value);\r\n   }\r\n\r\n    return(\r\n        <>\r\n        <div className={classes.Input}>\r\n        <input type=\"text\" placeholder=\"Search..\" ref={inputRef} onKeyUp={filterFunction} onChange={changeHandler} value={value} />\r\n        { isshow ? <div className={classes[\"dropdown-content\"]}>{arr.map((event,index)=>\r\n        (\r\n           <button onClick={btnHandler} key={index} > {event}  </button>)\r\n        )} </div> : null }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n\r\n","import Mapes from \"./Mapes\";\r\n\r\nconst arr = [\"AD\",\"Andorra\",42.5,1.5,\r\n\"AE\",\"United Arab Emirates\",24,54,\r\n\"AF\",\"Afghanistan\",33,65,\r\n\"AG\",\"Antigua and Barbuda\",17.05,-61.8,\r\n\"AI\",\"Anguilla\",18.25,-63.17,\r\n\"AL\",\"Albania\",41,20,\r\n\"AM\",\"Armenia\",40,45,\r\n\"AN\",\"Netherlands Antilles\",12.25,-68.75,\r\n\"AO\",\"Angola\",-12.5,18.5,\r\n\"AP\",\"Asia/Pacific Region\",35,105,\r\n\"AQ\",\"Antarctica\",-90,0,\r\n\"AR\",\"Argentina\",-34,-64,\r\n\"AS\",\"American Samoa\",-14.33,-170,\r\n\"AT\",\"Austria\",47.33,13.33,\r\n\"AU\",\"Australia\",-27,133,\r\n\"AW\",\"Aruba\",12.5,-69.97,\r\n\"AZ\",\"Azerbaijan\",40.5,47.5,\r\n\"BA\",\"Bosnia and Herzegovina\",44,18,\r\n\"BB\",\"Barbados\",13.17,-59.53,\r\n\"BD\",\"Bangladesh\",24,90,\r\n\"BE\",\"Belgium\",50.83,4,\r\n\"BF\",\"Burkina Faso\",13,-2,\r\n\"BG\",\"Bulgaria\",43,25,\r\n\"BH\",\"Bahrain\",26,50.55,\r\n\"BI\",\"Burundi\",-3.5,30,\r\n\"BJ\",\"Benin\",9.5,2.25,\r\n\"BM\",\"Bermuda\",32.33,-64.75,\r\n\"BN\",\"Brunei Darussalam\",4.5,114.67,\r\n\"BO\",\"Bolivia\",-17,-65,\r\n\"BR\",\"Brazil\",-10,-55,\r\n\"BS\",\"Bahamas\",24.25,-76,\r\n\"BT\",\"Bhutan\",27.5,90.5,\r\n\"BV\",\"Bouvet Island\",-54.43,3.4,\r\n\"BW\",\"Botswana\",-22,24,\r\n\"BY\",\"Belarus\",53,28,\r\n\"BZ\",\"Belize\",17.25,-88.75,\r\n\"CA\",\"Canada\",60,-95,\r\n\"CC\",\"Cocos (Keeling) Islands\",-12.5,96.83,\r\n\"CD\",\"Congo, The Democratic Republic of the\",0,25,\r\n\"CF\",\"Central African Republic\",7,21,\r\n\"CG\",\"Congo\",-1,15,\r\n\"CH\",\"Switzerland\",47,8,\r\n\"CI\",\"Cote d'Ivoire\",8,-5,\r\n\"CK\",\"Cook Islands\",-21.23,-159.77,\r\n\"CL\",\"Chile\",-30,-71,\r\n\"CM\",\"Cameroon\",6,12,\r\n\"CN\",\"China\",35,105,\r\n\"CO\",\"Colombia\",4,-72,\r\n\"CR\",\"Costa Rica\",10,-84,\r\n\"CU\",\"Cuba\",21.5,-80,\r\n\"CV\",\"Cape Verde\",16,-24,\r\n\"CX\",\"Christmas Island\",-10.5,105.67,\r\n\"CY\",\"Cyprus\",35,33,\r\n\"CZ\",\"Czech Republic\",49.75,15.5,\r\n\"DE\",\"Germany\",51,9,\r\n\"DJ\",\"Djibouti\",11.5,43,\r\n\"DK\",\"Denmark\",56,10,\r\n\"DM\",\"Dominica\",15.42,-61.33,\r\n\"DO\",\"Dominican Republic\",19,-70.67,\r\n\"DZ\",\"Algeria\",28,3,\r\n\"EC\",\"Ecuador\",-2,-77.5,\r\n\"EE\",\"Estonia\",59,26,\r\n\"EG\",\"Egypt\",27,30,\r\n\"EH\",\"Western Sahara\",24.5,-13,\r\n\"ER\",\"Eritrea\",15,39,\r\n\"ES\",\"Spain\",40,-4,\r\n\"ET\",\"Ethiopia\",8,38,\r\n\"FI\",\"Finland\",64,26,\r\n\"FJ\",\"Fiji\",-18,175,\r\n\"FK\",\"Falkland Islands (Malvinas)\",-51.75,-59,\r\n\"FM\",\"Micronesia, Federated States of\",6.92,158.25,\r\n\"FO\",\"Faroe Islands\",62,-7,\r\n\"FR\",\"France\",46,2,\r\n\"GA\",\"Gabon\",-1,11.75,\r\n\"GB\",\"United Kingdom\",54,-2,\r\n\"GD\",\"Grenada\",12.12,-61.67,\r\n\"GE\",\"Georgia\",42,43.5,\r\n\"GF\",\"French Guiana\",4,-53,\r\n\"GH\",\"Ghana\",8,-2,\r\n\"GI\",\"Gibraltar\",36.18,-5.37,\r\n\"GL\",\"Greenland\",72,-40,\r\n\"GM\",\"Gambia\",13.47,-16.57,\r\n\"GN\",\"Guinea\",11,-10,\r\n\"GP\",\"Guadeloupe\",16.25,-61.58,\r\n\"GQ\",\"Equatorial Guinea\",2,10,\r\n\"GR\",\"Greece\",39,22,\r\n\"GS\",\"South Georgia and the South Sandwich Islands\",-54.5,-37,\r\n\"GT\",\"Guatemala\",15.5,-90.25,\r\n\"GU\",\"Guam\",13.47,144.78,\r\n\"GW\",\"Guinea-Bissau\",12,-15,\r\n\"GY\",\"Guyana\",5,-59,\r\n\"HK\",\"Hong Kong\",22.25,114.17,\r\n\"HM\",\"Heard Island and McDonald Islands\",-53.1,72.52,\r\n\"HN\",\"Honduras\",15,-86.5,\r\n\"HR\",\"Croatia\",45.17,15.5,\r\n\"HT\",\"Haiti\",19,-72.42,\r\n\"HU\",\"Hungary\",47,20,\r\n\"ID\",\"Indonesia\",-5,120,\r\n\"IE\",\"Ireland\",53,-8,\r\n\"IL\",\"Israel\",31.5,34.75,\r\n\"IN\",\"India\",20,77,\r\n\"IO\",\"British Indian Ocean Territory\",-6,71.5,\r\n\"IQ\",\"Iraq\",33,44,\r\n\"IR\",\"Iran, Islamic Republic of\",32,53,\r\n\"IS\",\"Iceland\",65,-18,\r\n\"IT\",\"Italy\",42.83,12.83,\r\n\"JM\",\"Jamaica\",18.25,-77.5,\r\n\"JO\",\"Jordan\",31,36,\r\n\"JP\",\"Japan\",36,138,\r\n\"KE\",\"Kenya\",1,38,\r\n\"KG\",\"Kyrgyzstan\",41,75,\r\n\"KH\",\"Cambodia\",13,105,\r\n\"KI\",\"Kiribati\",1.42,173,\r\n\"KM\",\"Comoros\",-12.17,44.25,\r\n\"KN\",\"Saint Kitts and Nevis\",17.33,-62.75\r\n,\"KP\",\"Korea, Democratic People's Republic of\",40,127\r\n,\"KR\",\"Korea, Republic of\",37,127.5\r\n,\"KW\",\"Kuwait\",29.34,47.66\r\n,\"KY\",\"Cayman Islands\",19.5,-80.5,\r\n\"KZ\",\"Kazakhstan\",48,68,\r\n\"LA\",\"Lao People's Democratic Republic\",18,105,\r\n\"LB\",\"Lebanon\",33.83,35.83\r\n,\"LC\",\"Saint Lucia\",13.88,-61.13\r\n,\"LI\",\"Liechtenstein\",47.17,9.53\r\n,\"LK\",\"Sri Lanka\",7,81\r\n,\"LR\",\"Liberia\",6.5,-9.5\r\n,\"LS\",\"Lesotho\",-29.5,28.5\r\n,\"LT\",\"Lithuania\",56,24\r\n,\"LU\",\"Luxembourg\",49.75,6.17\r\n,\"LV\",\"Latvia\",57,25\r\n,\"LY\",\"Libyan Arab Jamahiriya\",25,17\r\n,\"MA\",\"Morocco\",32,-5\r\n,\"MC\",\"Monaco\",43.73,7.4\r\n,\"MD\",\"Moldova, Republic of\",47,29\r\n,\"ME\",\"Montenegro\",42,19\r\n,\"MG\",\"Madagascar\",-20,47\r\n,\"MH\",\"Marshall Islands\",9,168\r\n,\"MK\",\"Macedonia\",41.83,22\r\n,\"ML\",\"Mali\",17,-4\r\n,\"MM\",\"Myanmar\",22,98\r\n,\"MN\",\"Mongolia\",46,105\r\n,\"MO\",\"Macao\",22.17,113.55\r\n,\"MP\",\"Northern Mariana Islands\",15.2,145.75\r\n,\"MQ\",\"Martinique\",14.67,-61\r\n,\"MR\",\"Mauritania\",20,-12\r\n,\"MS\",\"Montserrat\",16.75,-62.2\r\n,\"MT\",\"Malta\",35.83,14.58\r\n,\"MU\",\"Mauritius\",-20.28,57.55\r\n,\"MV\",\"Maldives\",3.25,73\r\n,\"MW\",\"Malawi\",-13.5,34\r\n,\"MX\",\"Mexico\",23,-102\r\n,\"MY\",\"Malaysia\",2.5,112.5\r\n,\"MZ\",\"Mozambique\",-18.25,35\r\n,\"NA\",\"Namibia\",-22,17\r\n,\"NC\",\"New Caledonia\",-21.5,165.5\r\n,\"NE\",\"Niger\",16,8\r\n,\"NF\",\"Norfolk Island\",-29.03,167.95\r\n,\"NG\",\"Nigeria\",10,8\r\n,\"NI\",\"Nicaragua\",13,-85\r\n,\"NL\",\"Netherlands\",52.5,5.75\r\n,\"NO\",\"Norway\",62,10\r\n,\"NP\",\"Nepal\",28,84\r\n,\"NR\",\"Nauru\",-0.53,166.92\r\n,\"NU\",\"Niue\",-19.03,-169.87\r\n,\"NZ\",\"New-Zealand\",-41,174\r\n,\"OM\",\"Oman\",21,57\r\n,\"PA\",\"Panama\",9,-80\r\n,\"PE\",\"Peru\",-10,-76\r\n,\"PF\",\"French Polynesia\",-15,-140\r\n,\"PG\",\"Papua New Guinea\",-6,147\r\n,\"PH\",\"Philippines\",13,122\r\n,\"PK\",\"Pakistan\",30,70\r\n,\"PL\",\"Poland\",52,20\r\n,\"PM\",\"Saint Pierre and Miquelon\",46.83,-56.33\r\n,\"PR\",\"Puerto Rico\",18.25,-66.5\r\n,\"PS\",\"Palestinian Territory\",32,35.25\r\n,\"PT\",\"Portugal\",39.5,-8\r\n,\"PW\",\"Palau\",7.5,134.5\r\n,\"PY\",\"Paraguay\",-23,-58\r\n,\"QA\",\"Qatar\",25.5,51.25\r\n,\"RE\",\"Reunion\",-21.1,55.6\r\n,\"RO\",\"Romania\",46,25\r\n,\"RS\",\"Serbia\",44,21\r\n,\"RU\",\"Russian Federation\",60,100\r\n,\"RW\",\"Rwanda\",-2,30\r\n,\"SA\",\"Saudi Arabia\",25,45\r\n,\"SB\",\"Solomon Islands\",-8,159\r\n,\"SC\",\"Seychelles\",-4.58,55.67\r\n,\"SD\",\"Sudan\",15,30\r\n,\"SE\",\"Sweden\",62,15\r\n,\"SG\",\"Singapore\",1.37,103.8\r\n,\"SH\",\"Saint Helena\",-15.93,-5.7\r\n,\"SI\",\"Slovenia\",46,15\r\n,\"SJ\",\"Svalbard and Jan Mayen\",78,20\r\n,\"SK\",\"Slovakia\",48.67,19.5\r\n,\"SL\",\"Sierra Leone\",8.5,-11.5\r\n,\"SM\",\"San Marino\",43.77,12.42\r\n,\"SN\",\"Senegal\",14,-14\r\n,\"SO\",\"Somalia\",10,49\r\n,\"SR\",\"Suriname\",4,-56\r\n,\"ST\",\"Sao Tome and Principe\",1,7\r\n,\"SV\",\"El Salvador\",13.83,-88.92\r\n,\"SY\",\"Syrian Arab Republic\",35,38\r\n,\"SZ\",\"Swaziland\",-26.5,31.5\r\n,\"TC\",\"Turks and Caicos Islands\",21.75,-71.58\r\n,\"TD\",\"Chad\",15,19\r\n,\"TF\",\"French Southern Territories\",-43,67\r\n,\"TG\",\"Togo\",8,1.17\r\n,\"TH\",\"Thailand\",15,100\r\n,\"TJ\",\"Tajikistan\",39,71\r\n,\"TK\",\"Tokelau\",-9,-172\r\n,\"TM\",\"Turkmenistan\",40,60\r\n,\"TN\",\"Tunisia\",34,9\r\n,\"TO\",\"Tonga\",-20,-175\r\n,\"TR\",\"Turkey\",39,35\r\n,\"TT\",\"Trinidad and Tobago\",11,-61\r\n,\"TV\",\"Tuvalu\",-8,178\r\n,\"TW\",\"Taiwan\",23.5,121\r\n,\"TZ\",\"Tanzania, United Republic of\",-6,35\r\n,\"UA\",\"Ukraine\",49,32\r\n,\"UG\",\"Uganda\",1,32\r\n,\"UM\",\"United States Minor Outlying Islands\",19.28,166.6\r\n,\"US\",\"United States\",38,-97\r\n,\"UY\",\"Uruguay\",-33,-56\r\n,\"UZ\",\"Uzbekistan\",41,64\r\n,\"VA\",\"Holy See (Vatican City State)\",41.9,12.45\r\n,\"VC\",\"Saint Vincent and the Grenadines\",13.25,-61.2\r\n,\"VE\",\"Venezuela\",8,-66\r\n,\"VG\",\"Virgin Islands, British\",18.5,-64.5\r\n,\"VI\",\"Virgin Islands, U.S.\",18.33,-64.83\r\n,\"VN\",\"Vietnam\",16,106\r\n,\"VU\",\"Vanuatu\",-16,167\r\n,\"WF\",\"Wallis and Futuna\",-13.3,-176.2\r\n,\"WS\",\"Samoa\",-13.58,-172.33\r\n,\"YE\",\"Yemen\",15,48\r\n,\"YT\",\"Mayotte\",-12.83,45.17\r\n,\"ZA\",\"South Africa\",-29,24\r\n,\"ZM\",\"Zambia\",-15,30\r\n,\"ZW\",\"Zimbabwe\",-20,30,\r\n\"USA\", \"USA\", 44.5,-89.5,\r\n\"SI\",\"Solomon-Islands\",-9.43333, 159.95,\r\n\"NZ\",\"New-Zealand\",-36.84,174.76,\r\n\"HK\",\"Hong-Kong\",22.30,114.17,\r\n\"Sk\", \"S-Korea\", 37.53,128.60,\r\n\"SL\",\"Sri-Lanka\", 6.927,80.531,\r\n\"UAE\",\"UAE\",25.27,54.57,\r\n\"Saudi-Arabia\",\"Saudi-Arabia\",21.54,39.17,\r\n\"Russia\",\"Russia\",58.00,56.31,\r\n\"Iran\", \"iran\", 34.63,50.876,\r\n\"UK\", \"UK\", 51.50, 1.08,\r\n\"Australia\",\"Australia\",-31.083,150.91,\r\n]\r\n\r\n\r\n\r\n// Created map data containg the lat and lng of countries which are passed to the Mapes component\r\nconst map1 = new Map();\r\nfor(let i=0;i<arr.length;){\r\n    map1.set(arr[i+1], [arr[i+2],arr[i+3]]);\r\n   i=i+4;\r\n}\r\n\r\nfunction GoogleMap(props){\r\n\r\n\r\n    return (\r\n        <> <Mapes mapdata={map1} mapHandle={props.mapHandle} /></>\r\n    )\r\n}\r\n\r\nexport default GoogleMap;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport DataContext from '../components/Context/Context';\r\nimport classes from \"./Mapes.module.css\"\r\nimport { useState } from 'react/cjs/react.development';\r\n\r\nfunction Mapes(props){\r\n  // Data context To get covid datas\r\n    const cntx = useContext(DataContext);\r\n  // data is paased to mark on the map\r\n  const [selectCase, setSelectCase] = useState(\"totalcase\");\r\n  function onChangeHandler(e){\r\n    setSelectCase( e.target.value);\r\n  }\r\n  var data = [];\r\n  if(selectCase===\"totalcase\"){\r\n    data = cntx.data.map((res,index)=>{\r\n      let arr = [180, 180]\r\n      // mapdata has data of lat and lan of contries \r\n      // mapdata is paased from GoogleMap component as props\r\n      if(props.mapdata.get(res.country)!== undefined){\r\n        // checking if country is avilebale in map data\r\n       arr = props.mapdata.get(res.country);\r\n      }\r\n      let width = \"0px\";\r\n        if(res.cases.total ){\r\n          // setting radius of circle on map based on the covid cases per million population\r\n          width= res.cases.total/400000;\r\n        }\r\n      \r\n      return( <div key={index} lat = { arr[0]} lng= {arr[1]} > <div className={classes.myDIV} style={{ height: width, width: width, borderRadius: \"50%\", border: \"1px solid red\", backgroundColor: \"rgb(280,280,280)\", brightness: \"0.01\", opacity: 0.6 }}> </div>  <div className={classes.hide}> <div className={classes.cases}> Country: {res.country}</div><div className={classes.cases}> Active case: {res.cases.active} </div> <div className={classes.cases}> Total case: {res.cases.total} </div> <div className={classes.cases}> Total Deaths: {res.deaths.total} </div></div> </div> )\r\n  });\r\n  }\r\n  if(selectCase===\"activecase\"){\r\n    data = cntx.data.map((res,index)=>{\r\n      let arr = [180, 180]\r\n      // mapdata has data of lat and lan of contries \r\n      // mapdata is paased from GoogleMap component as props\r\n      if(props.mapdata.get(res.country)!== undefined){\r\n        // checking if country is avilebale in map data\r\n       arr = props.mapdata.get(res.country);\r\n      }\r\n      let width = \"0px\";\r\n        if(res.cases.active ){\r\n          // setting radius of circle on map based on the covid cases per million population\r\n          width= res.cases.active/40000;\r\n        }\r\n      \r\n      return( <div key={index} lat = { arr[0]} lng= {arr[1]} > <div className={classes.myDIV} style={{ height: width, width: width, borderRadius: \"50%\", border: \"1px solid blue\", backgroundColor: \"rgb(280,280,280)\", brightness: \"0.01\", opacity: 0.6 }}> </div>  <div className={classes.hide}> <div className={classes.cases}> Country: {res.country}</div><div className={classes.cases}> Active case: {res.cases.active} </div> <div className={classes.cases}> Total case: {res.cases.total} </div> <div className={classes.cases}> Total Deaths: {res.deaths.total} </div> </div> </div> )\r\n  });\r\n  }\r\n  if(selectCase===\"totaldeaths\"){\r\n    data = cntx.data.map((res,index)=>{\r\n      let arr = [180, 180]\r\n      // mapdata has data of lat and lan of contries \r\n      // mapdata is paased from GoogleMap component as props\r\n      if(props.mapdata.get(res.country)!== undefined){\r\n        // checking if country is avilebale in map data\r\n       arr = props.mapdata.get(res.country);\r\n      }\r\n      let width = \"0px\";\r\n        if(res.deaths.total ){\r\n          // setting radius of circle on map based on the covid cases per million population\r\n          width= res.deaths.total/5000;\r\n        }\r\n      \r\n      return( <div key={index} lat = { arr[0]} lng= {arr[1]} > <div className={classes.myDIV} style={{ height: width, width: width, borderRadius: \"50%\", border: \"1px solid #00FF00\", backgroundColor: \"rgb(280,280,280)\", brightness: \"0.01\", opacity: 0.6 }}> </div>  <div className={classes.hide}> <div className={classes.cases}> Country: {res.country}</div><div className={classes.cases}> Active case: {res.cases.active} </div> <div className={classes.cases}> Total case: {res.cases.total} </div> <div className={classes.cases}> Total Deaths: {res.deaths.total} </div></div> </div> )\r\n  });\r\n  }\r\n    \r\n  \r\n    return( <>\r\n      <h2 className={classes.Heading}> COVID 19 Total Case World Map  </h2>\r\n\r\n      <div className={classes.unit1}> <select name=\"cases\" onChange={onChangeHandler}>\r\n          <option value =\"totalcase\" style={{color: \"red\"}} >Total Cases</option>\r\n          <option value =\"activecase\" style={{color: \"blue\"}}>Active Cases</option>\r\n           <option value =\"totaldeaths\" style={{color: \"#00FF00\"}} >Total Deaths</option>\r\n           </select> \r\n      </div>\r\n     \r\n\r\n\r\n        <div style={{ height: '85vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyBXapFTmzomzJQ_nhFxMEVT5jw5kxH7NYc\" }}\r\n          defaultCenter={{\r\n         lat: 59.95,\r\n          lng: 30.33\r\n           }}\r\n          defaultZoom={1}         \r\n         >\r\n          {/*  data is defined above for mark on the map*/}\r\n                {data}\r\n                \r\n  \r\n        </GoogleMapReact>\r\n        {/* button to get main page */}\r\n        <div className={classes.Btn}> <button  onClick = {props.mapHandle}> Back</button> </div>\r\n        \r\n      </div>\r\n      </>\r\n    )\r\n}   \r\n\r\nexport default Mapes;\r\n\r\n","import './App.css';\nimport AllCovid from './components/Allcovid/AllCovid';\nimport { ContextProvider } from './components/Context/Context';\nimport Countries from './components/Countries/Countries';\nimport Header from './components/Header/Header';\nimport Input from './components/Header/Input';\nimport {useState, useEffect} from \"react\"\nimport MapData from './GoogleMap/MapData';\nimport Loading from './components/Loading/Loading';\n\n\nfunction App() {\n\n  // Data state manage the data fetched from API\n  const [data, setData]= useState([]);\n  // loading state to check if data are feteched from APi\n  const [loading, setLoading] = useState(false);\n  // google map state to condtional rendering of the google map\n  const [googlemap, setGooglemap] = useState(false);\n  const [worldcovid, setWorldcovid] = useState(true);\n  \n  useEffect(()=>{\n    fetch(\"https://covid-193.p.rapidapi.com/statistics\", {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"613baafc16msh487fdb600a437f5p1ae449jsnf8acf1720170\"\n        }\n    })\n    .then(response => {\n        return response.json();\n    }).then((json)=>{\n          setData(json.response);\n        setLoading(true);\n      })\n          .catch(err => {\n       console.log(\"Not able to fetch Data\");\n    });\n  },[]) \n\n  // mapHandler functions to manage state for map to render\n  function mapHandler(){\n    setGooglemap(true);\n  }\n\n  function mapHandle(){\n    setGooglemap(false);\n  }\n\n\n  function showGraphHandler(){\n    setWorldcovid((state)=>!state);\n  }\n  \n    return (<div className=\"App\">\n    { !loading && <Loading />}\n     <ContextProvider data={data}> \n    { loading && !googlemap &&\n    \n      <>\n      \n      {worldcovid && <> <Header /> <Input />\n      <AllCovid mapHandler={mapHandler}/> </>}\n\n     <Countries showGraphHandler={showGraphHandler} /> \n     \n     </>\n     }\n     {googlemap && <MapData mapHandle={mapHandle} />}\n     </ContextProvider>\n    \n     </div> \n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1OMIu\",\"footer-logo\":\"Footer_footer-logo__1jrOE\",\"footer-copy\":\"Footer_footer-copy__3Wp97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__uxMio\",\"Date\":\"Header_Date__3oby9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"LineChart_Chart__3g2gC\",\"Heading\":\"LineChart_Heading__2IsnA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"BarChart_Chart__1_yDZ\",\"Heading\":\"BarChart_Heading__2Mw9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3neh3\",\"dropdown-content\":\"Input_dropdown-content__2E_pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heading\":\"Mapes_Heading__3KzjD\",\"Btn\":\"Mapes_Btn__6-1Qj\",\"hide\":\"Mapes_hide__Z1NJ6\",\"myDIV\":\"Mapes_myDIV__ed-yd\",\"cases\":\"Mapes_cases__11WcT\",\"unit1\":\"Mapes_unit1__SVt1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"CountryGraph_Btn__1QXdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loading_Loading__3c844\"};"],"sourceRoot":""}